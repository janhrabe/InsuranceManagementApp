// <auto-generated />
using System;
using InsuranceManagementApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsuranceManagementApp.Migrations.InsuranceDb
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20240909190856_InsuranceModelsCreate")]
    partial class InsuranceModelsCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("InsuranceManagementApp.Models.Insurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Amount")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("InsuranceType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PolicyHolderId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PolicyHolderId");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("InsuranceManagementApp.Models.InsuranceEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InsuranceId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PolicyHolderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InsuranceId");

                    b.HasIndex("PolicyHolderId");

                    b.ToTable("InsuranceEvents");
                });

            modelBuilder.Entity("InsuranceManagementApp.Models.PolicyHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TelephoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PolicyHolders");
                });

            modelBuilder.Entity("InsuranceManagementApp.Models.Insurance", b =>
                {
                    b.HasOne("InsuranceManagementApp.Models.PolicyHolder", "PolicyHolder")
                        .WithMany()
                        .HasForeignKey("PolicyHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PolicyHolder");
                });

            modelBuilder.Entity("InsuranceManagementApp.Models.InsuranceEvent", b =>
                {
                    b.HasOne("InsuranceManagementApp.Models.Insurance", "Insurance")
                        .WithMany()
                        .HasForeignKey("InsuranceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceManagementApp.Models.PolicyHolder", "PolicyHolder")
                        .WithMany()
                        .HasForeignKey("PolicyHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Insurance");

                    b.Navigation("PolicyHolder");
                });
#pragma warning restore 612, 618
        }
    }
}
